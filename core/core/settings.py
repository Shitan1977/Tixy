"""
Django settings for core project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os
from django.conf.global_settings import MEDIA_URL

# ============== Custom Admin Pannel (Unfold) ==============
from django.templatetags.static import static
from django.urls import reverse_lazy
from django.utils.translation import gettext_lazy as _

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--hjw6%tr(eix!8b9995h!8oo8b7t(xf=v1r7few!$!f#9scv%f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
 # inizio Custom Admin Pannel
    'api',
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    "unfold.contrib.import_export",  # optional, if django-import-export package is used
    "unfold.contrib.guardian",  # optional, if django-guardian package is used
    "unfold.contrib.simple_history",  # optional, if django-simple-history package is used
    "unfold.contrib.location_field",  # optional, if django-location-field package is used
    "unfold.contrib.constance",  # optional, if django-constance package is used
 # fine Custom Admin Pannel

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    "django_filters",
    'rest_framework',
    'drf_yasg',
    'django_cleanup.apps.CleanupConfig', # IMPORTANTE: SEMPRE alla fine dell' elenco
]
AUTH_USER_MODEL = 'api.UserProfile'

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / "templates",
            BASE_DIR / "api" / "templates",],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'core.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

#Media files (PDF)
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#configuro i permessi per l'autenticazione buaaaaaaa
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
        'rest_framework.filters.SearchFilter',      # <—
        'rest_framework.filters.OrderingFilter',    # <—
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
}


SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': False,
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header',
            'description': 'JWT Authorization header using the Bearer scheme. Example: "Bearer {token}"',
        }
    },
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=180),
}

#cofigurazione email
#EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

#EMAIL_HOST = 'smtp.aruba.it'
#EMAIL_PORT = 587
#EMAIL_USE_TLS = True

#EMAIL_HOST_USER = 'info@acecrm.it'
#EMAIL_HOST_PASSWORD = '!Demetrio77'
#DEFAULT_FROM_EMAIL = 'info@acecrm.it'  # stesso dell'user

# Configurazione email locale – stampa in console
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
DEFAULT_FROM_EMAIL = 'info@acecrm.it'

CORS_ALLOWED_ORIGINS = [
    "http://127.0.0.1:8000",
    "http://localhost:8000",
]

# ============== Custom Admin Pannel (Unfold) ==============
UNFOLD = {
    "SITE_TITLE": "Amministrazione",
    "SITE_HEADER": "Menu", 
    "SITE_SYMBOL": "store",
    # per cambiare l'icona nel quadratino basta usare Google Fonts - Material Icons - il nome che sta in fondo alla descrizione dell'icona che vuoi mettere

    #"DASHBOARD_CALLBACK": "core.api.views.dashboard_callback",

    "SIDEBAR": {
        "show_search": True,
        "show_all_applications": False,
        "navigation": [
            {
                "title": _("Gestione Marketplace"),
                "collapsible": True,
                "items": [
                    {
                        "title": _("Ordini"),
                        "icon": "receipt_long",
                        "link": reverse_lazy("admin:api_orderticket_changelist"),
                    },
                    {
                        "title": _("Annunci di vendita (Listing)"),
                        "icon": "sell",
                        "link": reverse_lazy("admin:api_listing_changelist"),
                    },
                    {
                        "title": _("Recensioni"),
                        "icon": "reviews",
                        "link": reverse_lazy("admin:api_recensione_changelist"),
                    },
                ],
            },
            {
                "title": _("Catalogo Eventi"),
                "separator": True, 
                "collapsible": True,
                "items": [
                    {"title": _("Eventi"), 
                     "icon": "event",
                     "link": reverse_lazy("admin:api_evento_changelist")},
                    {"title": _("Performance (Date)"), 
                     "icon": "curtains", 
                     "link": reverse_lazy("admin:api_performance_changelist")},
                    {"title": _("Artisti"), 
                     "icon": "person_celebrate", 
                     "link": reverse_lazy("admin:api_artista_changelist")},
                    {"title": _("Luoghi"), 
                     "icon": "map", 
                     "link": reverse_lazy("admin:api_luoghi_changelist")},
                    {"title": _("Categorie"), 
                     "icon":"list",
                     "link": reverse_lazy("admin:api_categoria_changelist")},
                ],
            },
            {
                "title": _("Utenti e Abbonamenti"),
                "separator": True, 
                "collapsible": True,
                "items": [
                    {"title": _("Utenti"), 
                     "icon": "groups",
                     "link": reverse_lazy("admin:api_userprofile_changelist")},
                    {"title": _("Abbonamenti"), 
                     "icon":"article_person",
                     "link": reverse_lazy("admin:api_abbonamento_changelist")},
                ],
            },
            {
                "title": _("Configurazione"),
                "separator": True, 
                "collapsible": True,
                "items": [
                    {"title": _("Piattaforme"), 
                     "icon":"link",
                     "link": reverse_lazy("admin:api_piattaforma_changelist")},
                    {"title": _("Piani Alert"), 
                     "icon":"circle_notifications",
                     "link": reverse_lazy("admin:api_alertplan_changelist")},
                    {"title": _("Sconti"), 
                     "icon":"percent",
                     "link": reverse_lazy("admin:api_sconti_changelist")},
                ],
            },
        ],
    },

    "SITE_FAVICONS":[{
            "rel": "icon",
            "sizes": "32x32",
            "type": "image/svg+xml",
            "href": lambda request: static("image/favicon-32x32.png"),
        }, 
    ],

    "BORDER_RADIUS": "8px",
    "COLORS": {
        "primary": {
            "50": "oklch(0.98 0.02 85)",    # Very light version
            "100": "oklch(0.95 0.04 85)",   # Light version
            "200": "oklch(0.90 0.06 85)",   # Light medium
            "300": "oklch(0.85 0.08 85)",   # Medium light
            "400": "oklch(0.75 0.12 85)",   # Medium
            "500": "oklch(0.70 0.16 85)",   # Your main color (rgb(243, 179, 61))
            "600": "oklch(0.65 0.18 85)",   # Dark medium
            "700": "oklch(0.55 0.20 85)",   # Dark
            "800": "oklch(0.45 0.18 85)",   # Very dark
            "900": "oklch(0.35 0.15 85)",   # Darkest
            "950": "oklch(0.25 0.12 85)",   # Almost black
        },
        "font": {
            "subtle-light": "var(--color-base-500)",
            "subtle-dark": "var(--color-base-400)", 
            "default-light": "var(--color-base-600)",
            "default-dark": "var(--color-base-300)",
            "important-light": "var(--color-base-900)",
            "important-dark": "var(--color-base-100)",
        },
    },
}




